//
//  MainScreenPresenter.swift
//  Awesome Counter
//
//  Created by John Guerrero on 2/12/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class MainScreenPresenter {

    // MARK: - Private properties -

    private unowned let view: MainScreenViewInterface
    private let interactor: MainScreenInteractorInterface
    private let wireframe: MainScreenWireframeInterface
    private let itemManager: CounterItemManager!

    // MARK: - Lifecycle -

    init(view: MainScreenViewInterface, interactor: MainScreenInteractorInterface, wireframe: MainScreenWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
        self.itemManager = CounterItemManager()
    }

    deinit {
        removeNotificationObserver()
    }
}

// MARK: - Extensions -

extension MainScreenPresenter: MainScreenPresenterInterface {
    func viewDidLoad() {
        defer {
            addNotificationObserver()
        }
        view.startLoading()
        view.setItemManager(itemManager)
        if itemManager.itemsCount > 0 {
            view.setContentView()
        } else {
            view.setEmptyView()
        }
    }

    func viewDidAppear() {
        DispatchQueue.main.async { [weak self] in
            self?.view.finishLoading()
        }
    }

    fileprivate func removeNotificationObserver() {
        NotificationCenter.default.removeObserver(self)
    }

    func addNotificationObserver() {
        NotificationCenter.default.addObserver(
            self,
            selector: #selector(incrementCounter(sender:)),
            name: NSNotification.Name("CounterIncrementedNotification"),
            object: nil)
        NotificationCenter.default.addObserver(
            self,
            selector: #selector(decrementCounter(sender:)),
            name: NSNotification.Name("CounterDecrementedNotification"),
            object: nil)
    }

    @objc func incrementCounter(sender: NSNotification) {
        guard let counterId = sender.userInfo?["counterId"] as? String else { fatalError() }
        _ = itemManager.incrementCounter(byId: counterId )
        view.updateCounterInformation()
    }

    @objc func decrementCounter(sender: NSNotification) {
        guard let counterId = sender.userInfo?["counterId"] as? String else { fatalError() }
        _ = itemManager.decrementCounter(byId: counterId )
        view.updateCounterInformation()
    }

    func presentAddItemModule() {
        wireframe.navigate(to: MainScreenNavigationOption.addItem({ [weak self] (newCounter) in
            self?.itemManager.addItem(newCounter)
        }))
    }

}
